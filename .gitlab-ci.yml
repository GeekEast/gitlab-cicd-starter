stages:
  - build
  - test
  - deploy staging
  - deploy production
  - production test

image: node:latest

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/


variables:
  STAGING_DOMAIN: chicuti-staging.surge.sh
  PRODUCTION_DOMAIN: chicuti.surge.sh
  
build as artifact:
  stage: build
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
  artifacts:
    paths:
      - ./public
      - ./.cache # don't forget this


test artifact:
  image: alpine
  stage: test
  script:
    - grep -q "Gatsby" ./public/index.html

test website:
  stage: test
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve & # run in background, non-blocking way
    - sleep 3 # for the server to start
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby" # block running by tac

delpoy to staging:
  stage: deploy staging
  environment:
    name: staging
    url: http://$STAGING_DOMAIN
  script:
    - npm install -g surge
    - surge --project ./public --domain $STAGING_DOMAIN

delpoy to surge:
  stage: deploy production
  environment:
    name: production
    url: http://$PRODUCTION_DOMAIN
  script:
    - npm install -g surge
    - surge --project ./public --domain $PRODUCTION_DOMAIN

test deployment:
  stage: production test
  image: alpine
  script:
    - apk add --no-cache curl
    - curl -s "https://$PRODUCTION_DOMAIN" | grep -q "Hi people"